on:
  workflow_dispatch:
  #schedule:
   # - cron:  '0 15 * * THU'

name: auto update

jobs:
  check_eps:
    name: check for new episodes
    runs-on: ubuntu-latest
    outputs:
      new_ep: ${{ steps.new_files.outputs.new_episode }}
    steps:
      - name: checkout repo
        uses: actions/checkout@v1
        with:
            ref: improve-actions        # update
            token: ${{ secrets.GITHUB_TOKEN }}
      - name: check for and download new episodes
        id: new_files
        run: |
          ./code/getNewEpisodes.sh
          echo "new_episode=$NEW_EP" >> "$GITHUB_OUTPUT"
          echo "new_episode=$NEW_EP" >> "$GITHUB_ENV"
      - name: notification
        if: env.new_episode == 'false'
        env:
          IFTTT_KEY: ${{ secrets.IFTTT_KEY }}
        run: |
          data='{"value1": "Error", "value2": "No+new+episode"}'
          webhook_url="https://maker.ifttt.com/trigger/CRDiaglogue+update/with/key/${IFTTT_KEY}"
          curl -X POST -H "Content-Type: application/json" -d "$data" "$webhook_url"
      - name: commit changes
        if: env.new_episode == 'true'
        run: |
          git config --local user.name "$GITHUB_ACTOR"
          git config --local user.email "$GITHUB_ACTOR@users.noreply.github.com"
          git add .
          git commit -m 'add episode' || echo "No changes to commit"
      - name: push changes
        if: env.new_episode == 'true'
        uses: ad-m/github-push-action@master
        with:
            github_token: ${{ secrets.GITHUB_TOKEN }}
            branch: improve-actions       # update
  
  render:
    name: auto update
    needs: check_eps
    if: ${{ needs.check_eps.outputs.new_ep == 'true' }}
    runs-on: macos-latest
    steps:
      - name: checkout repo
        uses: actions/checkout@v1
        with:
            ref: improve-actions       # update
            token: ${{ secrets.GITHUB_TOKEN }}
      - name: setup r
        uses: r-lib/actions/setup-r@v2
      - name: setup pandoc
        uses: r-lib/actions/setup-pandoc@v1
      - name: install r packages
        run: Rscript -e 'install.packages(c("knitr", "rmarkdown", "tidyverse", "here", "rvest", "lubridate", "googlesheets4", "tidytext", "textdata", "wordcloud", "httr", "effsize", "fmsb", "Hmisc"))'
      - name: make directories
        run: mkdir data/html
      - name: get lexicons
        run: |
          mkdir cache
          mkdir cache/tidytext
          mkdir cache/tidytext/nrc
          cd cache/tidytext/nrc 
          curl -O http://saifmohammad.com/WebDocs/Lexicons/NRC-Emotion-Lexicon.zip
          unzip NRC-Emotion-Lexicon.zip
          cd ..
          mkdir bing
          cd bing
          curl -L -O http://ptrckprry.com/course/ssd/data/negative-words.txt
          curl -L -O http://ptrckprry.com/course/ssd/data/positive-words.txt
          cd ..
          mkdir afinn
          cd afinn
          curl -L -O http://www2.imm.dtu.dk/pubdb/views/edoc_download.php/6010/zip/imm6010.zip
          unzip imm6010.zip
      - name: auto update and notification
        env:
          IFTTT_KEY: ${{ secrets.IFTTT_KEY }}
        run: |
          source("./code/autoUpdate.R")
          source("./code/notification.R")
        shell: Rscript {0}
      - name: commit changes
        run: |
          git config --local user.name "$GITHUB_ACTOR"
          git config --local user.email "$GITHUB_ACTOR@users.noreply.github.com"
          git add .
          git commit -m 'auto update' || echo "No changes to commit"
      - name: push changes
        uses: ad-m/github-push-action@master
        with:
            github_token: ${{ secrets.GITHUB_TOKEN }}
            branch: improve-actions        # update
