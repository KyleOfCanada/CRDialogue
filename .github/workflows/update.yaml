on:
  workflow_dispatch:
  schedule:
   - cron:  '0 15 * * THU'

name: auto update

jobs:
  check_eps:
    name: check for new episodes
    runs-on: ubuntu-latest
    timeout-minutes: 10
    outputs:
      new_ep: ${{ steps.new_files.outputs.new_episode }}
    steps:
      - name: prep workspace
        run: |
          mkdir tmp
          mkdir tmp/html
          curl -o "./tmp/episodeCount.txt" "https://raw.githubusercontent.com/KyleOfCanada/CRDialogue/main/data/episodeCount.txt"
          curl -o "./tmp/getNewEpisodes.sh" "https://raw.githubusercontent.com/KyleOfCanada/CRDialogue/main/code/getNewEpisodes.sh"
      - name: check for and download new episodes
        id: new_files
        run: |
          bash ./tmp/getNewEpisodes.sh
      - name: notification
        if: ${{ env.new_episode == 'false' }}
        env:
          IFTTT_KEY: ${{ secrets.IFTTT_KEY }}
        run: |
          data='{"value1": "Error", "value2": "No new episode"}'
          webhook_url="https://maker.ifttt.com/trigger/CRDiaglogue+update/with/key/${IFTTT_KEY}"
          curl -X POST -H "Content-Type: application/json" -d "$data" "$webhook_url"
      - name: compress html
        if: ${{ env.new_episode == 'true' }}
        run: tar cfz html.tar.gz ./tmp/html/*
      - name: upload html
        if: ${{ env.new_episode == 'true' }}
        uses: actions/upload-artifact@v3
        with:
          name: html-files
          path: html.tar.gz
          retention-days: 1
  
  render:
    name: auto update
    needs: check_eps
    if: ${{ needs.check_eps.outputs.new_ep == 'true' }}
    runs-on: ubuntu-latest
    timeout-minutes: 45
    steps:
      - name: checkout repo
        uses: actions/checkout@v1
        with:
            ref: main
            token: ${{ secrets.GITHUB_TOKEN }}
      - name: setup r
        if: runner.os == 'Linux'
        uses: r-lib/actions/setup-r@v2
      - name: install dependencies
        uses: r-lib/actions/setup-r-dependencies@v2
      - name: make directories
        run: mkdir data/html
      - name: download html
        uses: actions/download-artifact@v3
        with:
          name: html-files
          path: data/html
      - name: decompress html files
        run: |
          tar xf data/html/html.tar.gz
          ls data/html/
      - name: get lexicons
        run: |
          mkdir cache
          mkdir cache/tidytext
          mkdir cache/tidytext/nrc
          cd cache/tidytext/nrc 
          curl -O http://saifmohammad.com/WebDocs/Lexicons/NRC-Emotion-Lexicon.zip
          unzip NRC-Emotion-Lexicon.zip
          cd ..
          mkdir bing
          cd bing
          curl -L -O http://ptrckprry.com/course/ssd/data/negative-words.txt
          curl -L -O http://ptrckprry.com/course/ssd/data/positive-words.txt
          cd ..
          mkdir afinn
          cd afinn
          curl -L -O http://www2.imm.dtu.dk/pubdb/views/edoc_download.php/6010/zip/imm6010.zip
          unzip imm6010.zip
      - name: auto update and notification
        env:
          IFTTT_KEY: ${{ secrets.IFTTT_KEY }}
          NEW_EP: ${{ needs.check_eps.outputs.new_ep }}
        run: |
          source("./code/autoUpdate.R")
          source("./code/notification.R")
        shell: Rscript {0}
      - name: commit changes
        run: |
          git config --local user.name "$GITHUB_ACTOR"
          git config --local user.email "$GITHUB_ACTOR@users.noreply.github.com"
          git add .
          git commit -m 'auto update' || echo "No changes to commit"
      - name: push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: main
